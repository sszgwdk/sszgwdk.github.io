<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - SszgwDk</title><link>https://sszgwdk.github.io/posts/</link><description>所有文章 | SszgwDk</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 23 Aug 2024 18:47:46 +0800</lastBuildDate><atom:link href="https://sszgwdk.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>CMU15-445 Fall 2023 Project 0</title><link>https://sszgwdk.github.io/posts/cmu445_p0/</link><pubDate>Fri, 23 Aug 2024 18:47:46 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/cmu445_p0/</guid><description>Project 0是一个C++热身项目。使用的C++的版本是C++17，但是知道C++11的知识点就足够了。 C++前置知识 从我的编码过程来看，P0主要涉及</description></item><item><title>CMU15-445 Fall 2023 入门</title><link>https://sszgwdk.github.io/posts/cmu445_start/</link><pubDate>Sun, 18 Aug 2024 17:22:41 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/cmu445_start/</guid><description>作为一名新接触存储领域的学生，我在自学了tinykv之后，感觉自己的基础实在是过于薄弱，对于常见的数据库组件，诸如缓存、索引、事务引擎等，都</description></item><item><title>TinyKV Project 4</title><link>https://sszgwdk.github.io/posts/tinykv_p4/</link><pubDate>Thu, 15 Aug 2024 19:34:21 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p4/</guid><description>参考资料 Project 4 通过建立一个事务系统实现多版本并发控制 MVCC。在编码之前，需要对事务的相关概念提前了解（事务的属性，事务隔离级别等）。 文档可以</description></item><item><title>TinyKV Project 3C</title><link>https://sszgwdk.github.io/posts/tinykv_p3c/</link><pubDate>Wed, 14 Aug 2024 12:04:47 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3c/</guid><description>3c要求实现region balance调度器，文档给了详细的算法步骤，相对比较容易。 processRegionHeartbeat 每个region都会周期性的发送心跳给调度器，调度器需</description></item><item><title>TinyKV Project 3B 疑难杂症</title><link>https://sszgwdk.github.io/posts/tinykv_p3b_problems/</link><pubDate>Wed, 14 Aug 2024 12:03:17 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3b_problems/</guid><description>我在做tinykv这个课程的过程中，3b之前遇到的问题大多能在网上找到解决方法，因此也没怎么做记录；而3b由于引入了Multi Raft以及集</description></item><item><title>TinyKV Project 3B</title><link>https://sszgwdk.github.io/posts/tinykv_p3b/</link><pubDate>Wed, 14 Aug 2024 11:56:22 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3b/</guid><description>project3b是整个tinykv中最难的部分，测试会出现很多问题，往往需要通过打印大量日志才能找到问题的原因，因此在编程时要尤其注意一些</description></item><item><title>TinyKV Project 3A</title><link>https://sszgwdk.github.io/posts/tinykv_p3a/</link><pubDate>Wed, 14 Aug 2024 11:55:35 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3a/</guid><description>在Raft层实现领导者转移和成员变更（虽然Raft层实现简单，但是存在很多细节问题需要注意，后面3B的测试问题一半都来自Raft层） 领导者转</description></item><item><title>TinyKV Project 3 文档翻译</title><link>https://sszgwdk.github.io/posts/tinykv_p3_translate/</link><pubDate>Wed, 14 Aug 2024 11:36:06 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3_translate/</guid><description>Project 3 MultiRaftKV 在 Project2 中，你建立了一个基于Raft的高可用的kv服务器，做得很好！但还不够，这样的kv服务器是由单一的 raftGroup 支持的，不能无限扩展，并且每一个</description></item><item><title>TinyKV Project 2C</title><link>https://sszgwdk.github.io/posts/tinykv_p2c/</link><pubDate>Wed, 14 Aug 2024 11:33:26 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p2c/</guid><description>project2c目的是实现RaftLog GC和Snapshot支持。在Raft和raftstore中均需要修改和新增代码。 问题分析 raft 一致性</description></item><item><title>TinyKV Project 2B</title><link>https://sszgwdk.github.io/posts/tinykv_p2b/</link><pubDate>Wed, 14 Aug 2024 11:27:36 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p2b/</guid><description>Request执行流程和调用链分析 梳理tinykv中Request执行流程和调用链有助于理解project2B文档的要求和需要实现的逻辑，推</description></item></channel></rss>