<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>SszgwDk</title><link>https://sszgwdk.github.io/</link><description>SszgwDk's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 01 Sep 2024 17:48:47 +0800</lastBuildDate><atom:link href="https://sszgwdk.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>CMU15-445 Fall 2023 Project 3</title><link>https://sszgwdk.github.io/posts/cmu445_p3/</link><pubDate>Sun, 01 Sep 2024 17:48:47 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/cmu445_p3/</guid><description>Project 3 Query Execution的任务是实现BusTub执行SQL命令的组件。主要分为： 执行SQL查询的算子 优化规则的实现 Project 3 的难点在于读代码，理解</description></item><item><title>CMU15-445 Fall 2023 Project 2</title><link>https://sszgwdk.github.io/posts/cmu445_p2/</link><pubDate>Thu, 29 Aug 2024 18:42:20 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/cmu445_p2/</guid><description>bustub的哈希索引结构 bustub使用的哈希索引是可扩展哈希的一种变体，在两级方案的基础上添加了一个HeaderPage​，按照文档的说</description></item><item><title>CMU15-445 Fall 2023 Project 1</title><link>https://sszgwdk.github.io/posts/cmu445_p1/</link><pubDate>Thu, 29 Aug 2024 17:54:14 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/cmu445_p1/</guid><description>Project 1是为Bustub构建一个面向磁盘的缓存管理器（Storage Manager）。 缓存管理器（也叫缓存池，Buffer Pool）是数据库系统</description></item><item><title>CMU15-445 Fall 2023 Project 0</title><link>https://sszgwdk.github.io/posts/cmu445_p0/</link><pubDate>Fri, 23 Aug 2024 18:47:46 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/cmu445_p0/</guid><description>Project 0是一个C++热身项目。使用的C++的版本是C++17，但是知道C++11的知识点就足够了。 C++前置知识 从我的编码过程来看，P0主要涉及</description></item><item><title>CMU15-445 Fall 2023 入门</title><link>https://sszgwdk.github.io/posts/cmu445_start/</link><pubDate>Sun, 18 Aug 2024 17:22:41 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/cmu445_start/</guid><description>作为一名新接触存储领域的学生，我在自学了tinykv之后，感觉自己的基础实在是过于薄弱，对于常见的数据库组件，诸如缓存、索引、事务引擎等，都</description></item><item><title>TinyKV Project 4</title><link>https://sszgwdk.github.io/posts/tinykv_p4/</link><pubDate>Thu, 15 Aug 2024 19:34:21 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p4/</guid><description>参考资料 Project 4 通过建立一个事务系统实现多版本并发控制 MVCC。在编码之前，需要对事务的相关概念提前了解（事务的属性，事务隔离级别等）。 文档可以</description></item><item><title>TinyKV Project 3C</title><link>https://sszgwdk.github.io/posts/tinykv_p3c/</link><pubDate>Wed, 14 Aug 2024 12:04:47 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3c/</guid><description>3c要求实现region balance调度器，文档给了详细的算法步骤，相对比较容易。 processRegionHeartbeat 每个region都会周期性的发送心跳给调度器，调度器需</description></item><item><title>TinyKV Project 3B 疑难杂症</title><link>https://sszgwdk.github.io/posts/tinykv_p3b_problems/</link><pubDate>Wed, 14 Aug 2024 12:03:17 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3b_problems/</guid><description>我在做tinykv这个课程的过程中，3b之前遇到的问题大多能在网上找到解决方法，因此也没怎么做记录；而3b由于引入了Multi Raft以及集</description></item><item><title>TinyKV Project 3B</title><link>https://sszgwdk.github.io/posts/tinykv_p3b/</link><pubDate>Wed, 14 Aug 2024 11:56:22 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3b/</guid><description>project3b是整个tinykv中最难的部分，测试会出现很多问题，往往需要通过打印大量日志才能找到问题的原因，因此在编程时要尤其注意一些</description></item><item><title>TinyKV Project 3A</title><link>https://sszgwdk.github.io/posts/tinykv_p3a/</link><pubDate>Wed, 14 Aug 2024 11:55:35 +0800</pubDate><author>SszgwDk</author><guid>https://sszgwdk.github.io/posts/tinykv_p3a/</guid><description>在Raft层实现领导者转移和成员变更（虽然Raft层实现简单，但是存在很多细节问题需要注意，后面3B的测试问题一半都来自Raft层） 领导者转</description></item></channel></rss>